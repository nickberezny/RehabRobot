{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.8f16ed5418d1196cf3a3.hot-update.js","sources":["webpack:///./games/Follow_traj.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as THREE from 'three'\r\n//import * as OBJLoader from 'three-obj-loader';\r\nimport { setParam } from \"../src/actions\";\r\n//OBJLoader(THREE);\r\n\r\n//require(\"/home/rehab/Documents/RehabRobot/server/games/sprite/crosshair.png\")\r\n//require(\"/home/rehab/Documents/RehabRobot/server/games/sprite/crosshair_yellow.png\" );\r\n\r\nclass Follow_traj extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.start = this.start.bind(this)\r\n    this.stop = this.stop.bind(this)\r\n    this.animate = this.animate.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    var points = 0;\r\n    var maxStroke = 200;\r\n    var text;\r\n\r\n    var group = new THREE.Group();\r\n\r\n    const width = this.mount.clientWidth\r\n    const height = this.mount.clientHeight\r\n\r\n    var scene = new THREE.Scene()\r\n    scene.background = new THREE.Color( 0xf7fdff );\r\n    \r\n    var camera = new THREE.OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, -100, 500000);\r\n    camera.position.set( 0,0,5);\r\n    scene.add( camera );\r\n\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true })\r\n    renderer.setSize(width, height)\r\n\r\n    var geometry = new THREE.BoxGeometry( 100, 100, 100 );\r\n\r\n    var plateMaterial = new THREE.MeshBasicMaterial( { color: 0x86a5d6 } );\r\n    var barMaterial = new THREE.MeshBasicMaterial( { color: 0xd1d1d1 } );\r\n    var desMaterial = new THREE.MeshBasicMaterial( { color: 0xff7272, transparent: true, opacity: 0.5 } );\r\n\r\n    var plate = new THREE.Mesh( geometry, plateMaterial );\r\n    var bar = new THREE.Mesh( geometry, barMaterial );\r\n    var desPos = new THREE.Mesh( geometry, desMaterial );\r\n\r\n    plate.position.set(0.0, 0.0, 0.0);\r\n    plate.scale.set(1.25, 0.25, 1.0);\r\n\r\n    bar.position.set(0.0, 0.0, -25);\r\n    bar.scale.set(0.75, 4.0, 1.0);\r\n\r\n    desPos.position.set(0.0, 0.0, 50);\r\n    desPos.scale.set(1.5, 0.5, 1.0);\r\n\r\n    var spotLight1 = new THREE.SpotLight( 0xffffff, 1 );\r\n    spotLight1.position.set( -width/3, 200, 200 );\r\n    var light = new THREE.HemisphereLight( 0xffffff, 0xffffff, 1 );\r\n    scene.add( light );\r\n    scene.add(spotLight1)\r\n\r\n    //group.add( plate );\r\n    scene.add( bar );\r\n    scene.add(desPos);\r\n    scene.add(plate);\r\n\r\n\r\n    this.scene = scene\r\n    this.camera = camera\r\n    this.renderer = renderer\r\n\r\n    this.plate = plate\r\n    this.bar = bar\r\n    this.desPos = desPos\r\n\r\n    //this.group = group;\r\n    this.points = points\r\n    \r\n    this.mount.appendChild(this.renderer.domElement)\r\n    this.start()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop()\r\n    this.mount.removeChild(this.renderer.domElement)\r\n  }\r\n\r\n  start() {\r\n    if (!this.frameId) {\r\n      this.frameId = requestAnimationFrame(this.animate)\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    cancelAnimationFrame(this.frameId)\r\n  }\r\n\r\n  animate() {\r\n\r\n    this.desPos.position.y = this.props.xdes - 200.0\r\n    this.plate.position.y = this.props.x - 200.0\r\n\r\n    console.log(this.plate.position.y)\r\n\r\n\r\n/*\r\n    this.cube.position.x = this.props.xdes \r\n    this.cube2.position.x = this.props.x \r\n\r\n    if(this.cube2.position.x > this.cube.position.x - 50 && this.cube2.position.x < this.cube.position.x + 50){\r\n      this.points += 1;\r\n      console.log(this.points);\r\n    }\r\n */\r\n\r\n    this.renderScene()\r\n    this.frameId = window.requestAnimationFrame(this.animate)\r\n   \r\n  }\r\n\r\n  renderScene() {\r\n    this.renderer.render(this.scene, this.camera)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div\r\n        style={{ width: '300px', height: '400px' }}\r\n        ref={(mount) => { this.mount = mount }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  \r\n  //map state variables to the component's state \r\n  return {\r\n    x: state.x,\r\n    xdes: state.xdes\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {} //add importing action functions here\r\n)(Follow_traj);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AALA;AAMA;AACA;;;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAEA;AACA;AAEA;AAGA;;;;;;;;;;AAUA;AACA;AAEA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA9HA;AACA;AAgIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;;;;A","sourceRoot":""}