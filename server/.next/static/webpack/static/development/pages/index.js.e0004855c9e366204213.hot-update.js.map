{"version":3,"file":"static/webpack/static/development/pages/index.js.e0004855c9e366204213.hot-update.js","sources":["webpack:///./components/Generic/SetButton.jsx","webpack:///./components/Pages/SetupPage.jsx"],"sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from \"react-redux\";\nimport { runRobot } from \"../../src/actions\";\n\nimport io from \"socket.io-client\";\n\nclass RunButton extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.run = this.run.bind(this);\n  }\n\n  run() {\n\n    //change this to send different data\n    let dataToSend = 'SET_P' + this.props.P + '_D' + this.props.D + '_xdes' + this.props.xdes;\n    console.log(dataToSend)\n    //this.props.socket.emit('START_ROBOT',dataToSend)\n  \n  }\n\n  render() {\n\n    return (\n      <Button variant=\"contained\" color=\"primary\" onClick={this.run}>\n        {this.props.text}\n      </Button>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    socket: state.socket,\n    P: state.P,\n    D: state.D,\n    xdes: state.xdes\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { runRobot }\n)(RunButton);\n\n//","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {runRobot} from '../../src/actions'\nimport SetButton from '../Generic/SetButton'\nimport InputText from '../Generic/InputText'\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nclass SetupPage extends React.Component {\n\n\tconstructor(props) {\n\t    super(props);  \n\t}\n\n\trender() {\n\t\treturn (\n\n\t\t\t<div>\n\t\t\t  \t<Typography variant=\"display1\" gutterBottom>\n\t\t\t    \tSet Up a Session    \n\t\t      \t</Typography>\n\t\t      \t<div style={{padding: 24}}>\n\t\t      \t\t<InputText text=\"P Gain\" textValue={this.props.P} paramName='P' />\n\t\t      \t\t<InputText text=\"D Gain\" textValue={this.props.D} paramName='D' />\n\t\t      \t\t<InputText text=\"X Desired\" textValue={this.props.xdes} paramName='xdes' />\n\t\t      \t</div>\n\t\t      \t<div style={{padding: 24}}>\n\t\t      \t<SetButton text=\"Run\" clickFn = {runRobot} />\n\t\t      \t</div>\n\t\t    </div>  \t\n\t\t)\n\t}\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n  \tP: state.P,\n  \tD: state.D,\n  \txdes: state.xdes,\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(SetupPage);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AAEA;AACA;AACA;AAGA;;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAvBA;AACA;AAyBA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAvBA;AACA;AA0BA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;A","sourceRoot":""}